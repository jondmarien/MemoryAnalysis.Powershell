name: Update Lines of Code Statistics

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Manual trigger
  schedule:
    - cron: '0 0 * * *'  # Daily at midnight UTC

permissions:
  contents: write  # Needed to push changes back to repo

jobs:
  update-loc:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        
    - name: Install tokei
      run: cargo install tokei
      
    - name: Generate LOC statistics
      run: |
        echo "Generating LOC statistics..."
        # Initialize submodules to include rust-bridge
        git submodule update --init --recursive
        # Run tokei with follow-links to include all nested projects
        tokei . --follow-links -o json > loc-stats.json
        echo "Generated loc-stats.json:"
        cat loc-stats.json | python3 -m json.tool | head -100
        
    - name: Generate LOC SVG table
      run: |
        python3 << 'EOF'
        import json
        from datetime import datetime
        from collections import defaultdict
        
        with open('loc-stats.json', 'r') as f:
            data = json.load(f)
        
        # Aggregate all languages from the JSON output
        # tokei outputs each language as a top-level key with code/comments/blanks stats
        languages = {}
        total_aggregated = {'code': 0, 'comments': 0, 'blanks': 0}
        
        for k, v in data.items():
            # Skip Total and any non-dict entries
            if k == 'Total' or not isinstance(v, dict):
                continue
            
            # Only include languages with code lines
            if v.get('code', 0) > 0:
                languages[k] = v
                total_aggregated['code'] += v.get('code', 0)
                total_aggregated['comments'] += v.get('comments', 0)
                total_aggregated['blanks'] += v.get('blanks', 0)
        
        # If there's a Total in data, use it as the source of truth
        if 'Total' in data and isinstance(data['Total'], dict):
            total_aggregated = data['Total']
        
        sorted_languages = sorted(languages.items(), key=lambda x: x[1]['code'], reverse=True)
        
        svg_width = 950
        row_height = 35
        header_height = 40
        svg_height = header_height + (len(sorted_languages) + 1) * row_height + 20
        
        svg = f'''<svg width="{svg_width}" height="{svg_height}" xmlns="http://www.w3.org/2000/svg">
          <defs>
            <linearGradient id="headerGrad" x1="0%" y1="0%" x2="0%" y2="100%">
              <stop offset="0%" style="stop-color:#1e3a8a;stop-opacity:1" />
              <stop offset="100%" style="stop-color:#1e40af;stop-opacity:1" />
            </linearGradient>
            <linearGradient id="totalGrad" x1="0%" y1="0%" x2="0%" y2="100%">
              <stop offset="0%" style="stop-color:#78350f;stop-opacity:1" />
              <stop offset="100%" style="stop-color:#92400e;stop-opacity:1" />
            </linearGradient>
            <filter id="shadow" x="-50%" y="-50%" width="200%" height="200%">
              <feDropShadow dx="0" dy="2" stdDeviation="3" flood-opacity="0.3"/>
            </filter>
          </defs>
          
          <!-- Background -->
          <rect width="{svg_width}" height="{svg_height}" fill="#f8fafc" rx="8"/>
          
          <!-- Header -->
          <rect y="0" width="{svg_width}" height="{header_height}" fill="url(#headerGrad)" rx="8" ry="8" filter="url(#shadow)"/>
          <text x="20" y="28" font-family="Segoe UI, Arial, sans-serif" font-size="14" font-weight="bold" fill="#ffffff">Language</text>
          <text x="300" y="28" font-family="Segoe UI, Arial, sans-serif" font-size="14" font-weight="bold" fill="#ffffff" text-anchor="end">Code Lines</text>
          <text x="520" y="28" font-family="Segoe UI, Arial, sans-serif" font-size="14" font-weight="bold" fill="#ffffff" text-anchor="end">Comments</text>
          <text x="720" y="28" font-family="Segoe UI, Arial, sans-serif" font-size="14" font-weight="bold" fill="#ffffff" text-anchor="end">Blanks</text>
          <text x="920" y="28" font-family="Segoe UI, Arial, sans-serif" font-size="14" font-weight="bold" fill="#ffffff" text-anchor="end">Total</text>
        '''
        
        y_pos = header_height
        row_idx = 0
        for lang, stats in sorted_languages:
            code = stats['code']
            comments = stats['comments']
            blanks = stats['blanks']
            total = code + comments + blanks
            
            # Alternate row colors
            bg_color = "#ffffff" if row_idx % 2 == 0 else "#f3f4f6"
            text_color = "#1f2937"
            
            svg += f'''  <rect y="{y_pos}" width="{svg_width}" height="{row_height}" fill="{bg_color}"/>
          <text x="20" y="{y_pos + 24}" font-family="Segoe UI, Arial, sans-serif" font-size="13" fill="{text_color}" font-weight="500">{lang}</text>
          <text x="300" y="{y_pos + 24}" font-family="Segoe UI, Arial, sans-serif" font-size="13" fill="{text_color}" text-anchor="end">{code:,}</text>
          <text x="520" y="{y_pos + 24}" font-family="Segoe UI, Arial, sans-serif" font-size="13" fill="{text_color}" text-anchor="end">{comments:,}</text>
          <text x="720" y="{y_pos + 24}" font-family="Segoe UI, Arial, sans-serif" font-size="13" fill="{text_color}" text-anchor="end">{blanks:,}</text>
          <text x="920" y="{y_pos + 24}" font-family="Segoe UI, Arial, sans-serif" font-size="13" fill="{text_color}" text-anchor="end">{total:,}</text>
        '''
            y_pos += row_height
            row_idx += 1
        
        # Use aggregated totals
        code = total_aggregated['code']
        comments = total_aggregated['comments']
        blanks = total_aggregated['blanks']
        total = code + comments + blanks
        
        if code > 0:  # Only display total if we have data
            
            # Add separator line
            svg += f'''  <line x1="10" y1="{y_pos}" x2="{svg_width - 10}" y2="{y_pos}" stroke="#e5e7eb" stroke-width="1"/>
        '''
            y_pos += 5
            svg += f'''  <rect y="{y_pos}" width="{svg_width}" height="{row_height}" fill="url(#totalGrad)" filter="url(#shadow)"/>
          <text x="20" y="{y_pos + 24}" font-family="Segoe UI, Arial, sans-serif" font-size="13" font-weight="bold" fill="#ffffff">Total</text>
          <text x="300" y="{y_pos + 24}" font-family="Segoe UI, Arial, sans-serif" font-size="13" font-weight="bold" fill="#ffffff" text-anchor="end">{code:,}</text>
          <text x="520" y="{y_pos + 24}" font-family="Segoe UI, Arial, sans-serif" font-size="13" font-weight="bold" fill="#ffffff" text-anchor="end">{comments:,}</text>
          <text x="720" y="{y_pos + 24}" font-family="Segoe UI, Arial, sans-serif" font-size="13" font-weight="bold" fill="#ffffff" text-anchor="end">{blanks:,}</text>
          <text x="920" y="{y_pos + 24}" font-family="Segoe UI, Arial, sans-serif" font-size="13" font-weight="bold" fill="#ffffff" text-anchor="end">{total:,}</text>
        '''
        
        svg += '</svg>'
        with open('loc-stats.svg', 'w') as f:
            f.write(svg)
        
        print("âœ… LOC statistics SVG generated!")
        EOF
        
    - name: Commit and push changes
      uses: stefanzweifel/git-auto-commit-action@v7
      with:
        commit_message: "ðŸ“Š Update LOC statistics [automated]"
        file_pattern: "loc-stats.svg"
        commit_user_name: "github-actions[bot]"
        commit_user_email: "github-actions[bot]@users.noreply.github.com"
        skip_fetch: true
        skip_checkout: true
        
    - name: Clean up temporary files
      run: |
        rm -f loc-stats.json
        
    - name: Display summary
      run: |
        echo "âœ… LOC statistics SVG table generated!"
        echo "ðŸ“Š View loc-stats.svg in your repository."
