name: Update Lines of Code Statistics

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Manual trigger
  schedule:
    - cron: '0 0 * * *'  # Daily at midnight UTC

permissions:
  contents: write  # Needed to push changes back to repo

jobs:
  update-loc:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        
    - name: Install tokei
      run: cargo install tokei
      
    - name: Generate LOC statistics
      run: |
        echo "Generating LOC statistics..."
        tokei . -o json > loc-stats.json
        
    - name: Generate LOC SVG table
      run: |
        python3 << 'EOF'
        import json
        from datetime import datetime
        
        with open('loc-stats.json', 'r') as f:
            data = json.load(f)
        
        languages = {k: v for k, v in data.items() if k != 'Total' and isinstance(v, dict) and v.get('code', 0) > 0}
        sorted_languages = sorted(languages.items(), key=lambda x: x[1]['code'], reverse=True)
        
        svg_width = 900
        svg_height = 50 + (len(sorted_languages) + 2) * 30
        
        svg = f'''<svg width="{svg_width}" height="{svg_height}" xmlns="http://www.w3.org/2000/svg">
          <style>
            text {{ font-family: 'Courier New', monospace; font-size: 12px; }}
            .header {{ font-weight: bold; fill: white; }}
            .row {{ fill: #2d2d2d; }}
            .total {{ font-weight: bold; fill: #ffd700; }}
          </style>
          <defs>
            <linearGradient id="grad1" x1="0%" y1="0%" x2="100%" y2="0%">
              <stop offset="0%" style="stop-color:#222;stop-opacity:1" />
              <stop offset="100%" style="stop-color:#444;stop-opacity:1" />
            </linearGradient>
          </defs>
          <rect width="{svg_width}" height="{svg_height}" fill="url(#grad1)"/>
          <rect y="0" width="{svg_width}" height="30" fill="#333"/>
          <text x="10" y="20" class="header">Language</text>
          <text x="200" y="20" class="header">Code</text>
          <text x="350" y="20" class="header">Comments</text>
          <text x="520" y="20" class="header">Blanks</text>
          <text x="680" y="20" class="header">Total</text>
        '''
        
        y_pos = 50
        for lang, stats in sorted_languages:
            code = stats['code']
            comments = stats['comments']
            blanks = stats['blanks']
            total = code + comments + blanks
            svg += f'''  <text x="10" y="{y_pos}" class="row">{lang}</text>
          <text x="200" y="{y_pos}" class="row" text-anchor="end">{code:,}</text>
          <text x="350" y="{y_pos}" class="row" text-anchor="end">{comments:,}</text>
          <text x="520" y="{y_pos}" class="row" text-anchor="end">{blanks:,}</text>
          <text x="680" y="{y_pos}" class="row" text-anchor="end">{total:,}</text>
        '''
            y_pos += 30
        
        if 'Total' in data:
            total_stats = data['Total']
            code = total_stats['code']
            comments = total_stats['comments']
            blanks = total_stats['blanks']
            total = code + comments + blanks
            svg += f'''  <rect y="{y_pos - 10}" width="{svg_width}" height="30" fill="#444"/>
          <text x="10" y="{y_pos}" class="total">Total</text>
          <text x="200" y="{y_pos}" class="total" text-anchor="end">{code:,}</text>
          <text x="350" y="{y_pos}" class="total" text-anchor="end">{comments:,}</text>
          <text x="520" y="{y_pos}" class="total" text-anchor="end">{blanks:,}</text>
          <text x="680" y="{y_pos}" class="total" text-anchor="end">{total:,}</text>
        '''
        
        svg += '</svg>'
        with open('loc-stats.svg', 'w') as f:
            f.write(svg)
        
        print("âœ… LOC statistics SVG generated!")
        EOF
        
    - name: Commit and push changes
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: "ðŸ“Š Update LOC statistics [automated]"
        file_pattern: "loc-stats.svg"
        commit_user_name: "github-actions[bot]"
        commit_user_email: "github-actions[bot]@users.noreply.github.com"
        
    - name: Clean up temporary files
      run: |
        rm -f loc-stats.json
        
    - name: Display summary
      run: |
        echo "âœ… LOC statistics SVG table generated!"
        echo "ðŸ“Š View loc-stats.svg in your repository."
