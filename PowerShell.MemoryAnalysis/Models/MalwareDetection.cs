using System.Collections.Generic;
using System.Text.Json.Serialization;

namespace PowerShell.MemoryAnalysis.Models;

/// <summary>
/// Represents a potential malware detection in memory.
/// </summary>
public class MalwareDetection
{
    /// <summary>
    /// Process ID of the suspicious process
    /// </summary>
    [JsonPropertyName("pid")]
    public uint Pid { get; set; }

    /// <summary>
    /// Name of the suspicious process
    /// </summary>
    [JsonPropertyName("process_name")]
    public string ProcessName { get; set; } = string.Empty;

    /// <summary>
    /// Type of detection (e.g., "Code Injection", "Hidden Process")
    /// </summary>
    [JsonPropertyName("detection_type")]
    public string DetectionType { get; set; } = string.Empty;

    /// <summary>
    /// Severity level (Low, Medium, High, Critical)
    /// </summary>
    [JsonPropertyName("severity")]
    public string Severity { get; set; } = string.Empty;

    /// <summary>
    /// Confidence score (0-100)
    /// </summary>
    [JsonPropertyName("confidence")]
    public byte Confidence { get; set; }

    /// <summary>
    /// List of indicators found
    /// </summary>
    [JsonPropertyName("indicators")]
    public List<string> Indicators { get; set; } = [];

    /// <summary>
    /// Detailed description of the detection
    /// </summary>
    [JsonPropertyName("details")]
    public string Details { get; set; } = string.Empty;

    /// <summary>
    /// Gets a formatted threat level indicator
    /// </summary>
    public string ThreatLevel => Severity switch
    {
        "Critical" => "ðŸ”´ Critical",
        "High" => "ðŸŸ  High",
        "Medium" => "ðŸŸ¡ Medium",
        "Low" => "ðŸŸ¢ Low",
        _ => "âšª Unknown"
    };
}
